import pandas as pd
import glob
import re
import os
from pystyle import Colors, Colorate, Center, Box, Write

def display_banner():
    os.system('clear' if os.name == 'posix' else 'cls')
    
    banner = """
    ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
    ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
     ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
      ‚ïö‚ñà‚ñà‚ïî‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë
       ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë
       ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    """
    
    print(Colorate.Horizontal(Colors.red_to_blue, Center.XCenter(banner)))
    print(Center.XCenter("—Ç—É–ª –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –æ—Ç @vredon0s"))
    print("\n" + "="*60 + "\n")

def find_phones_in_csv(file_path, phone_pattern):
    """–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–æ–≤ –≤ CSV —Ñ–∞–π–ª–µ"""
    found = []
    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —á–∞–Ω–∫–∞–º–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
        chunk_size = 10000
        for chunk in pd.read_csv(file_path, chunksize=chunk_size, low_memory=False, encoding_errors='ignore'):
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–µ—Å—å —á–∞–Ω–∫ –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
            chunk_str = chunk.to_string()
            matches = phone_pattern.findall(chunk_str)
            for match in matches:
                found.append(match)
                
    except Exception as e:
        Write.Print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {file_path}: {str(e)}", Colors.red, interval=0.01)
    
    return found

def search_specific_phone():
    """–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –≤–æ –≤—Å–µ—Ö –±–∞–∑–∞—Ö"""
    phone = Write.Input("üì± –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞: ", Colors.blue, interval=0.01)
    if not phone:
        return
    
    Write.Print(f"\nüîç –ò—â–µ–º –Ω–æ–º–µ—Ä: {phone}", Colors.yellow, interval=0.01)
    print()
    
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–æ–º–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞
    search_digits = re.sub(r'\D', '', phone)
    
    csv_files = glob.glob("*.csv")
    if not csv_files:
        Write.Print("‚ùå CSV —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ!", Colors.red, interval=0.01)
        return
    
    total_found = 0
    
    for csv_file in csv_files:
        Write.Print(f"üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º: {csv_file}", Colors.cyan, interval=0.01)
        
        try:
            file_size = os.path.getsize(csv_file)
            size_str = f"{file_size/1024/1024:.1f} MB" if file_size > 1024*1024 else f"{file_size/1024:.1f} KB"
            Write.Print(f"   –†–∞–∑–º–µ—Ä: {size_str}", Colors.white, interval=0.01)
            
            found_in_file = 0
            chunk_size = 50000
            
            for chunk in pd.read_csv(csv_file, chunksize=chunk_size, low_memory=False, encoding_errors='ignore'):
                # –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º—É —á–∞–Ω–∫—É
                chunk_str = chunk.to_string()
                if search_digits in chunk_str:
                    Write.Print(f"   ‚úÖ –ù–ê–ô–î–ï–ù–û –í {csv_file}!", Colors.green, interval=0.01)
                    found_in_file += 1
                    total_found += 1
                    break
            
            if found_in_file == 0:
                Write.Print("   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ", Colors.red, interval=0.01)
                
        except Exception as e:
            Write.Print(f"   üí• –û—à–∏–±–∫–∞: {str(e)}", Colors.red, interval=0.01)
    
    Write.Print(f"\nüéØ –ò—Ç–æ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –≤ {total_found} —Ñ–∞–π–ª–∞—Ö", Colors.green, interval=0.01)

def search_all_phones():
    """–ü–æ–∏—Å–∫ –≤—Å–µ—Ö –Ω–æ–º–µ—Ä–æ–≤ –≤–æ –≤—Å–µ—Ö –±–∞–∑–∞—Ö"""
    Write.Print("\nüîç –ò—â–µ–º –≤—Å–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤...", Colors.yellow, interval=0.01)
    print()
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤
    phone_pattern = re.compile(r'(\+7|8)[\s\-]?\(?\d{3}\)?[\s\-]?\d{3}[\s\-]?\d{2}[\s\-]?\d{2}')
    
    csv_files = glob.glob("*.csv")
    if not csv_files:
        Write.Print("‚ùå CSV —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ!", Colors.red, interval=0.01)
        return
    
    all_phones = []
    
    for csv_file in csv_files:
        Write.Print(f"üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {csv_file}", Colors.cyan, interval=0.01)
        
        try:
            file_size = os.path.getsize(csv_file)
            size_str = f"{file_size/1024/1024:.1f} MB" if file_size > 1024*1024 else f"{file_size/1024:.1f} KB"
            Write.Print(f"   –†–∞–∑–º–µ—Ä: {size_str}", Colors.white, interval=0.01)
            
            # –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–æ–≤ –≤ —Ñ–∞–π–ª–µ
            found_phones = find_phones_in_csv(csv_file, phone_pattern)
            
            if found_phones:
                Write.Print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–æ–º–µ—Ä–æ–≤: {len(found_phones)}", Colors.green, interval=0.01)
                all_phones.extend(found_phones)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
                for phone in found_phones[:5]:
                    Write.Print(f"      üìû {phone}", Colors.white, interval=0.01)
                if len(found_phones) > 5:
                    Write.Print(f"      ... –∏ –µ—â–µ {len(found_phones) - 5} –Ω–æ–º–µ—Ä–æ–≤", Colors.white, interval=0.01)
            else:
                Write.Print("   ‚ùå –ù–æ–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", Colors.red, interval=0.01)
                
        except Exception as e:
            Write.Print(f"   üí• –û—à–∏–±–∫–∞: {str(e)}", Colors.red, interval=0.01)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –≤ —Ñ–∞–π–ª
    if all_phones:
        output_file = "–Ω–∞–π–¥–µ–Ω–Ω—ã–µ_–Ω–æ–º–µ—Ä–∞.txt"
        with open(output_file, 'w', encoding='utf-8') as f:
            for phone in set(all_phones):  # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
                f.write(phone + '\n')
        
        Write.Print(f"\nüíæ –í—Å–µ –Ω–æ–º–µ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {output_file}", Colors.green, interval=0.01)
        Write.Print(f"üìä –í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤: {len(set(all_phones))}", Colors.green, interval=0.01)

def main():
    display_banner()
    
    while True:
        Write.Print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n", Colors.blue, interval=0.01)
        Write.Print("1. üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n", Colors.white, interval=0.01)
        Write.Print("2. üìä –ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–≤—Å–µ –Ω–æ–º–µ—Ä–∞)\n", Colors.white, interval=0.01)
        Write.Print("3. üö™ –í—ã—Ö–æ–¥\n", Colors.white, interval=0.01)
        
        choice = Write.Input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ", Colors.blue, interval=0.01)
        
        if choice == '1':
            search_specific_phone()
        elif choice == '2':
            search_all_phones()
        elif choice == '3':
            Write.Print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!", Colors.green, interval=0.01)
            break
        else:
            Write.Print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!", Colors.red, interval=0.01)
        
        Write.Input("\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...", Colors.white, interval=0.01)
        display_banner()

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    try:
        import pandas
        from pystyle import Colors, Colorate, Center, Box, Write
    except ImportError:
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:")
        print("pip install pandas pystyle")
        exit(1)
    
    main()
